head <file name or log file name>    ----> this command is used to display the top ‘n‘ contents of file. By default it reads first 10 lines.

head -n <mention the number> <file name or log file name>    -----> it will show the first n number of contents.
Example: head -n 3 /etc/group -> it will show first 3 groups.

head -<mention number> <filename>    ----> it is same as above command.
Example: head -3 /etc/group -> will show first 3 group

----------------------------------------------------------------------------------------------------------------------------------------------------

tail <log file name or file name>-> used to view the last contents of file. By default it shows last 10 lines.

tail -n <mention desired number> <file name>   ----> to see the contents of file based on desired number of line.

tail -n +<mention the number> <fiile name>   -----> to display the contents of file starting from the number which is mentioned in command to the end of the file.
Example: tail -n +20 /var/log/syslog -> it will display from line 20 to the end of file.


tail -f <file name> -> it will show the contents of file with new lines. Means in real time if logs are updating with new lines, it will show new lines on terminal.


---------------------------------------------------------------------------------------------------------------------------------------------------------

watch ---> this command is used to see the changes in real time of file or directory. use below commands for a specific directory. Go inside any directory and try to use this command, and see how it works.

watch ls

watch -n <provide number of seconds > -d ls -l


-----------------------------------------------------------------------------------------------------------------------------------------------------------


ssh-keygen    ------> this command is used to generate the key, both private and public key. This generated key is stored in /root/.ssh/id_rsa which is a private key and /root/.ssh/id_rsa.pub which is a public key.


to login to the client server from local, open the id_rsa.pub file and copy the contents.
Go to client server, in user home dir, there will be .ssh folder, go inside it there will be authorized keys file.
Open the file, paste the key/contents copied from id_rsa.pub from local server. save the file.

with this user can connect from local server to client user.

to login, 
ssh <username>@<client server public-ip>



Once client deletes the public key from .ssh/authorized keys, if local server tries to connect with client, it will not be able to connect to client.


the main thing which is need to remember is thru which user you are requesting to log in to the client server. It depends on by being in which user key was generated, either root or normal user. If key is generated by root user, then only from root user, can be able to connect to client. But if try to connect from normal user, unable to connect.



with this login command, user can pass command arguments,

lets say need to remove git from client, for this login to the client from local,

ssh <username>@<client server public-ip> yum remove git* -y  -> this type of command is called as Runtime command.

this will login to the client and remove the git. After git is uninstalled it will be logged out. and user will be in local server.	
